# Spring Boot application configuration
spring.application.name=Namhatta Management System

# Server configuration - Run on port 8080 for Replit compatibility
server.port=8080
server.servlet.context-path=/api
server.address=0.0.0.0

# Database configuration for Neon PostgreSQL
spring.datasource.url=jdbc:postgresql://ep-calm-silence-a15zko7l-pooler.ap-southeast-1.aws.neon.tech:5432/neondb?sslmode=require&user=neondb_owner&password=npg_5MIwCD4YhSdP
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.id.new_generator_mappings=false

# Logging configuration
logging.level.com.namhatta=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN

# JWT configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=3600000

# CORS configuration for React frontend
app.cors.allowed-origins=*
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Spring Boot static content serving for React
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/**